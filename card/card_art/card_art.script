local camera = require "orthographic.camera"
local HEIGHT = tonumber(sys.get_config("display.height"))

function init()
	go.set("#sprite_art", "scale", vmath.vector3(0.6,0.6,1))
	msg.post("#sprite_back", "disable")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("over") then
		self.original_pos = go.get_position(".")
		self.card_size = go.get("#sprite", "size")	
		self.parent = go.get_parent()
		go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, go.get_scale()*1.2, go.EASING_OUTQUAD, 0.05, 0, end_scale_animate)
	elseif message_id == hash("out") then
		go.set_parent(".", self.parent)
		go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_OUTQUAD, 0.1)
		go.set_position(self.original_pos)
	elseif message_id == hash("content") then
		card_data = message.card_data
		label.set_text("#manalabel", "" .. card_data.mana)
		label.set_text("#attacklabel", "" .. card_data.attack)
		label.set_text("#healthlabel", "" .. card_data.health)
		label.set_text("#descriptionlabel", card_data.description)
		label.set_text("#namelabel", card_data.name)
		msg.post("#sprite_art", "play_animation", {id = hash(card_data.name)})
	end
end

function end_scale_animate(self, url, property)
	go.set_parent(".")
	go.set_position(go.get_position(self.parent))
	local card_pos = go.get(self.parent, "position")
	local y_pos = ((self.card_size.y) - HEIGHT) + self.card_size.y/2
	local over_pos = vmath.vector3(card_pos.x, y_pos, 20)
	pprint(over_pos)
	go.set(url, "position", over_pos)
end
